openapi: 3.0.4
info:
  title: User API
  description: API for managing users
  version: 1.0.12
components:
  securitySchemes:
    accessTokenHeader:
      type: apiKey
      in: header
      name: access-token
servers:
  - url: http://localhost:3000/api
  - url: https://cse341-users-tv7r.onrender.com/api
tags:
  - name: Users
    description: Operations related to users  
  - name: Tasks
    description: Operations related to tasks
paths:
  /users:
    get:
      tags:
        - Users
      security:
        - accessTokenHeader: []
      summary: Get all users
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    lastname:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
    post:
      tags:
        - Users
      security:
        - accessTokenHeader: []
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    lastname:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
  /users/{id}:
    patch:
      tags:
        - Users
      security:
        - accessTokenHeader: []
      summary: Update a user
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    acknowledged: 
                      type: boolean
    delete:
      tags:
        - Users
      security:
        - accessTokenHeader: []
      summary: Delete a user
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to delete
          schema:
            type: string
      responses:
        200:
          description: User deleted successfully 
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    acknowledged: 
                      type: boolean
                    deletedCount: 
                      type: number
  /tasks:
    get:
      tags:
        - Tasks
      security:
        - accessTokenHeader: []
      summary: Get all tasks
      responses:
        200:
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    status:
                      type: string
    post:
      tags:
        - Tasks
      security:
        - accessTokenHeader: []
      summary: Create a new task
      description: Creates and returns the newly added task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
      responses:
        200:
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    status:
                      type: string
  /tasks/{id}:
    patch:
      tags:
        - Tasks
      security:
        - accessTokenHeader: []
      summary: Update a task
      description: Updates a specific task by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: A list of tasks
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    acknowledged: 
                      type: boolean
    delete:
      tags:
        - Tasks
      security:
        - accessTokenHeader: []
      summary: Delete a task
      description: Deletes a task and returns a result summary
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to delete
          schema:
            type: string
      responses:
        200:
          description: Task deleted successfully 
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    acknowledged: 
                      type: boolean
                    deletedCount: 
                      type: number